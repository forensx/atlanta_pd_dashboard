{"version":3,"sources":["range-input.js","App.js","serviceWorker.js","index.js"],"names":["PositionContainer","styled","position","zIndex","bottom","width","display","justifyContent","alignItems","muiTheme","getMuiTheme","slider","trackColor","selectionColor","SliderInput","withStyles","root","marginLeft","valueLabel","background","color","Slider","RangeInput","min","max","value","animationSpeed","onChange","formatLabel","useState","isPlaying","setIsPlaying","animation","useEffect","id","cancelAnimationFrame","span","nextValueMin","requestAnimationFrame","isButtonEnabled","disabled","onClick","title","style","fill","event","newValue","valueLabelDisplay","valueLabelFormat","Title","Typography","Text","ambientLight","AmbientLight","intensity","pointLight1","PointLight","pointLight2","lightingEffect","LightingEffect","material","ambient","diffuse","shininess","specularColor","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","minZoom","pitch","bearing","colorRange","heatmapColorRange","getTooltip","object","lat","lng","count","points","length","Number","isFinite","toFixed","getCrimeCount","data","dataFilter","DataFilterExtension","filterSize","fp64","t","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","App","threshold","radiusPixels","mapStyle","upperPercentile","coverage","vizType","setVizType","crimeData","setData","filter","setFilter","timeRange","useMemo","reduce","range","d","DATE","Math","Infinity","getTimeRange","filterValue","crimeType","setCrimeType","uniqueCrimeTypes","Set","map","crime","TYPE","crimeTypeMenu","e","key","message","success","type","index","Item","vizTypeMenu","layers","HeatmapLayer","pickable","getPosition","COORDINATES","getFilterValue","filterRange","filterSoftRange","extensions","HexagonLayer","elevationRange","elevationScale","extruded","radius","lowerPercentile","transitions","className","height","padding","margin","backgroundColor","marginTop","right","flexDirection","paddingLeft","paddingRight","paddingTop","level","href","alignContent","overlay","placement","DownOutlined","effects","initialViewState","controller","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8ec13ea5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { styled, withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Button from \"@material-ui/core/IconButton\";\r\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport getMuiTheme from \"material-ui/styles/getMuiTheme\";\r\nimport { MuiThemeProvider } from \"material-ui\";\r\n\r\nconst PositionContainer = styled(\"div\")({\r\n  position: \"absolute\",\r\n  zIndex: 1,\r\n  bottom: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n});\r\n\r\n//?\r\nconst muiTheme = getMuiTheme({\r\n  slider: {\r\n    trackColor: \"#FF0000\",\r\n    selectionColor: \"#FF0000\",\r\n  },\r\n});\r\n\r\nconst SliderInput = withStyles({\r\n  root: {\r\n    marginLeft: 12,\r\n    width: \"40%\",\r\n  },\r\n  valueLabel: {\r\n    \"& span\": {\r\n      background: \"none\",\r\n      color: \"#000\",\r\n    },\r\n  },\r\n})(Slider);\r\n\r\nexport default function RangeInput({\r\n  min,\r\n  max,\r\n  value,\r\n  animationSpeed,\r\n  onChange,\r\n  formatLabel,\r\n}) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [animation] = useState({});\r\n\r\n  // prettier-ignore\r\n  useEffect(() => {\r\n    return () => animation.id && cancelAnimationFrame(animation.id);\r\n  }, [animation]);\r\n\r\n  if (isPlaying && !animation.id) {\r\n    const span = value[1] - value[0];\r\n    let nextValueMin = value[0] + animationSpeed;\r\n    if (nextValueMin + span >= max) {\r\n      nextValueMin = min;\r\n    }\r\n    animation.id = requestAnimationFrame(() => {\r\n      animation.id = 0;\r\n      onChange([nextValueMin, nextValueMin + span]);\r\n    });\r\n  }\r\n\r\n  const isButtonEnabled = value[0] > min || value[1] < max;\r\n\r\n  return (\r\n    <PositionContainer>\r\n      <Button\r\n        color={\"#FFFFFF\"}\r\n        disabled={!isButtonEnabled}\r\n        onClick={() => setIsPlaying(!isPlaying)}\r\n      >\r\n        {isPlaying ? <PauseIcon title=\"Stop\" /> : <PlayIcon title=\"Animate\" />}\r\n      </Button>\r\n      <MuiThemeProvider muiTheme={muiTheme}>\r\n        <SliderInput\r\n          style={{ fill: \"white\" }}\r\n          min={min}\r\n          max={max}\r\n          value={value}\r\n          onChange={(event, newValue) => onChange(newValue)}\r\n          valueLabelDisplay=\"auto\"\r\n          valueLabelFormat={formatLabel}\r\n        />\r\n      </MuiThemeProvider>\r\n    </PositionContainer>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { StaticMap } from \"react-map-gl\";\r\nimport DeckGL from \"@deck.gl/react\";\r\nimport { HeatmapLayer } from \"@deck.gl/aggregation-layers\";\r\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\r\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\r\nimport { DataFilterExtension } from \"@deck.gl/extensions\";\r\nimport { Menu, Dropdown, Button, message } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport crimeData from \"./data/data.json\";\r\nimport { Typography } from \"antd\";\r\nimport { Statistic } from \"antd\";\r\nimport { Divider } from \"antd\";\r\nimport RangeInput from \"./range-input\";\r\nconst { Title, Text } = Typography;\r\n\r\n// Set your mapbox access token here\r\nconst MAPBOX_ACCESS_TOKEN =\r\n  \"pk.eyJ1IjoicGFudDIwMDIiLCJhIjoiY2prenlwb2ZtMHlnMjNxbW1ld3VxYWZ4cCJ9.rOb8DhCzsysBIw69MxyWKg\"; // eslint-disable-line\r\n\r\nconst ambientLight = new AmbientLight({\r\n  color: [255, 255, 255],\r\n  intensity: 1.0,\r\n});\r\n\r\nconst pointLight1 = new PointLight({\r\n  color: [255, 255, 255],\r\n  intensity: 0.6,\r\n  position: [-0.144528, 49.739968, 80000],\r\n});\r\n\r\nconst pointLight2 = new PointLight({\r\n  color: [255, 255, 255],\r\n  intensity: 0.6,\r\n  position: [-3.807751, 54.104682, 8000],\r\n});\r\n\r\nconst lightingEffect = new LightingEffect({\r\n  ambientLight,\r\n  pointLight1,\r\n  pointLight2,\r\n});\r\n\r\nconst material = {\r\n  ambient: 0.64,\r\n  diffuse: 0.6,\r\n  shininess: 32,\r\n  specularColor: [51, 51, 51],\r\n};\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  longitude: -84.3963,\r\n  latitude: 33.7556,\r\n  zoom: 11,\r\n  maxZoom: 20,\r\n  minZoom: 4,\r\n  pitch: 60,\r\n  bearing: 0,\r\n};\r\n\r\nexport const colorRange = [\r\n  [1, 152, 189],\r\n  [73, 227, 206],\r\n  [216, 254, 181],\r\n  [254, 237, 177],\r\n  [254, 173, 84],\r\n  [209, 55, 78],\r\n];\r\n\r\nexport const heatmapColorRange = [\r\n  [255, 255, 178],\r\n  [254, 217, 118],\r\n  [254, 178, 76],\r\n  [253, 141, 60],\r\n  [240, 59, 32],\r\n  [189, 0, 38],\r\n];\r\n\r\nfunction getTooltip({ object }) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n  const lat = object.position[1];\r\n  const lng = object.position[0];\r\n  const count = object.points.length;\r\n\r\n  return `\\\r\n    Latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : \"\"}\r\n    Longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : \"\"}\r\n    ${count} Crimes`;\r\n}\r\n\r\nfunction getCrimeCount(data) {\r\n  return data.length;\r\n}\r\n\r\nconst dataFilter = new DataFilterExtension({\r\n  filterSize: 1,\r\n  fp64: false,\r\n});\r\n\r\nfunction getTimeRange(data) {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  return data.reduce(\r\n    (range, d) => {\r\n      const t = d.DATE;\r\n\r\n      range[0] = Math.min(range[0], t);\r\n      range[1] = Math.max(range[1], t);\r\n      return range;\r\n    },\r\n    [Infinity, -Infinity]\r\n  );\r\n}\r\n\r\nfunction formatLabel(t) {\r\n  const date = new Date(t);\r\n  return `${date.getUTCFullYear()}/${\r\n    date.getUTCMonth() + 1\r\n  }/${date.getUTCDate()}`;\r\n}\r\n\r\nexport default function App({\r\n  intensity = 1,\r\n  threshold = 0.1,\r\n  radiusPixels = 30,\r\n  mapStyle = \"mapbox://styles/mapbox/dark-v9\",\r\n  upperPercentile = 100,\r\n  coverage = 1,\r\n}) {\r\n  const [vizType, setVizType] = useState(\"Hexagon\");\r\n  const [data, setData] = useState(crimeData);\r\n\r\n  const [filter, setFilter] = useState(null);\r\n  const timeRange = useMemo(() => getTimeRange(data), [data]);\r\n  const filterValue = filter || timeRange;\r\n\r\n  const [crimeType, setCrimeType] = useState(null);\r\n  const uniqueCrimeTypes = [...new Set(crimeData.map((crime) => crime.TYPE))];\r\n  const crimeTypeMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {uniqueCrimeTypes.map((type, index) => (\r\n        <Menu.Item key={index}>{type}</Menu.Item>\r\n      ))}\r\n      <Menu.Item key=\"ALL\">All Crimes</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  function handleMenuClick(e) {\r\n    if (e.key === \"ALL\") {\r\n      setCrimeType(\"ALL\");\r\n      setData(crimeData);\r\n      message.success(\"Showing all crimes\", 1);\r\n    } else {\r\n      setCrimeType(uniqueCrimeTypes[e.key]);\r\n      setData(\r\n        crimeData.filter((crime) => crime.TYPE === uniqueCrimeTypes[e.key])\r\n      );\r\n      message.success(\"Selected \" + uniqueCrimeTypes[e.key], 1);\r\n    }\r\n  }\r\n\r\n  const vizTypeMenu = (\r\n    <Menu onClick={handleVizChange}>\r\n      <Menu.Item key=\"Hexagon\">Hexagon</Menu.Item>\r\n      <Menu.Item key=\"Heatmap\">Heatmap</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  function handleVizChange(e) {\r\n    setVizType(e.key);\r\n    message.success(\"Selected \" + e.key, 1);\r\n  }\r\n\r\n  const layers = [\r\n    data && vizType === \"Heatmap\"\r\n      ? new HeatmapLayer({\r\n          data,\r\n          colorRange: heatmapColorRange,\r\n          id: \"heatmp-layer\",\r\n          pickable: true,\r\n          getPosition: (d) => [d.COORDINATES[1], d.COORDINATES[0]],\r\n          getFilterValue: (d) => d.DATE,\r\n          filterRange: [filterValue[0], filterValue[1]],\r\n          filterSoftRange: [\r\n            filterValue[0] * 0.9 + filterValue[1] * 0.1,\r\n            filterValue[0] * 0.1 + filterValue[1] * 0.9,\r\n          ],\r\n          extensions: [dataFilter],\r\n          radiusPixels,\r\n          intensity,\r\n          threshold,\r\n        })\r\n      : vizType === \"Hexagon\"\r\n      ? new HexagonLayer({\r\n          id: \"hexagon\",\r\n          colorRange,\r\n          coverage,\r\n          data,\r\n          elevationRange: [0, 200],\r\n          elevationScale: data && data.length ? 50 : 0,\r\n          extruded: true,\r\n          getPosition: (d) => [d.COORDINATES[1], d.COORDINATES[0]],\r\n          pickable: true,\r\n          radius: 100,\r\n          upperPercentile,\r\n          lowerPercentile: 0,\r\n          material,\r\n\r\n          transitions: {\r\n            elevationScale: 1000,\r\n          },\r\n        })\r\n      : null,\r\n  ];\r\n\r\n  const MS_PER_DAY = 8.64e7;\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ height: \"100vh\", width: \"100vw\", padding: 0, margin: 0 }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          zIndex: \"1000\",\r\n          position: \"absolute\",\r\n          marginTop: \"1.0%\",\r\n          right: \"1.5%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"380px\",\r\n          width: \"340px\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n          paddingTop: \"12px\",\r\n        }}\r\n      >\r\n        <Title level={4}>Atlanta Crime Dashboard</Title>\r\n        <Text>All reported crimes in Atlanta in 2019.</Text>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-evenly\",\r\n            paddingTop: \"16px\",\r\n          }}\r\n        >\r\n          {vizType === \"Hexagon\"\r\n            ? colorRange.map((color) => (\r\n                <div\r\n                  style={{\r\n                    width: \"16.6667%\",\r\n                    height: \"18px\",\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              ))\r\n            : heatmapColorRange.map((color) => (\r\n                <div\r\n                  style={{\r\n                    width: \"16.6667%\",\r\n                    height: \"18px\",\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: \"6px\",\r\n          }}\r\n        >\r\n          <Text>Fewer crimes</Text>\r\n          <Text>More crimes</Text>\r\n        </div>\r\n        <div style={{ paddingTop: \"12px\" }}>\r\n          <Text>\r\n            Data source:{\" \"}\r\n            <a href=\"http://opendata.atlantapd.org/Default.aspx\">\r\n              APD Open Data Portal\r\n            </a>\r\n          </Text>\r\n        </div>\r\n        <div style={{ paddingTop: \"12px\" }}>\r\n          <Statistic title=\"Crimes\" value={getCrimeCount(data)} />\r\n        </div>\r\n        <Divider />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignContent: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Dropdown overlay={crimeTypeMenu} placement=\"bottomRight\">\r\n            <Button>\r\n              {crimeType ? crimeType : \"Crime type\"} <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n          <Dropdown overlay={vizTypeMenu} placement=\"bottomRight\">\r\n            <Button>\r\n              {vizType ? vizType : \"Choose visualization type\"} <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </div>\r\n        <div style={{ paddingTop: \"24px\", paddingLeft: \"60%\" }}>\r\n          <Text>\r\n            View Code:{\" \"}\r\n            <a href=\"https://github.com/forensx/atlanta_pd_dashboard\">GitHub</a>\r\n          </Text>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          zIndex: \"-1\",\r\n        }}\r\n      >\r\n        <DeckGL\r\n          effects={[lightingEffect]}\r\n          initialViewState={INITIAL_VIEW_STATE}\r\n          controller={true}\r\n          layers={layers}\r\n          getTooltip={getTooltip}\r\n        >\r\n          <StaticMap\r\n            reuseMaps\r\n            mapStyle={mapStyle}\r\n            preventStyleDiffing={true}\r\n            mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n          />\r\n          {timeRange && vizType === \"Heatmap\" && (\r\n            <RangeInput\r\n              min={timeRange[0]}\r\n              max={timeRange[1]}\r\n              value={filterValue}\r\n              formatLabel={formatLabel}\r\n              animationSpeed={MS_PER_DAY}\r\n              onChange={setFilter}\r\n            />\r\n          )}\r\n        </DeckGL>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}